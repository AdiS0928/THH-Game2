<!DOCTYPE html>
<html>
    <head>
      <link rel="stylesheet" href="css/game.css">
      <script src="js/headbreaker.js"></script> 

      <meta charset="UTF-8">
	<title>Puzzle</title>

	<!-- responsive -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	<meta name="apple-mobile-web-app-capable" content="yes">

	<!-- meta -->
	<meta http-equiv="Content-type" content="text/html; charset=utf-8">

	<meta name="title" content="Puzzlefy">
	<meta name="description" content="Solve and share puzzles to your friends!">
	<meta name="keywords" content="puzzle, jigsaw, p5js, puzzlefy, puzzlify, image to puzzle, image to jigsaw">

	<meta property="og:type" content="website">
	<meta property="og:site_name" content="puzzlefy.netlify.app">
	<meta property="og:url" content="https://puzzlefy.netlify.app">
	<meta property="og:image" content="https://upload.wikimedia.org/wikipedia/commons/f/fe/Puzzle.jpg">
	<meta property="og:title" content="Puzzlefy">
	<meta property="og:description" content="Solve and share puzzles with your friends!">

	<script src=js/meta.js></script>

	<!-- style -->
	<link rel="stylesheet" type="text/css" href="css/style.css">

	<!-- icons -->
	<script src="https://kit.fontawesome.com/d86c5c458d.js" crossorigin="anonymous"></script>
    </head>


    <body touch-action=none unresolved>
      
      <div class="ui">
<div class="game">
  <div class= "left">
    <form action="/leader" id = "frm" method="POST">
      <div class="scorecontaintop">
        <div class="mobtxt">
          <p >Complete the puzzle before the time runs out!</p>
        </div>
      <div class="scorecontain">
          <p class="score" id="time"></p>
          <input type="hidden" value="12" id="s" name="s"></input>
          <input type="hidden" value="<%= time %>" id="t" name="t"></input>
      </div>
      
      
    </div>
    <div>
    <button class="scorebuton"  type="submit" value="mobile" name="mobile">
      SEE RESULTS!
  </button>
</div>
  <div class="rrr" id="dd">
</div>
    <div >
      <!-- <canvas class="im" height="500" width="500"></canvas> -->
      <!-- <div class="scorecanvas" id="my-canvas" onmousedown="start()" ontouchstart="start()">

      </div> -->

      <!-- <img src="static/Artwork4.jpeg" alt="" class="im" style="transition: 2s;"> -->
      
    </div>
      <div class="popup" id="popup">
        <h2 class="txt4" id="pt1">Congratulations You Won!</h2>
        <p class="txt5">Click Below to see the leaderboard and Score!</p>
        <img src="static/Artwork.jpg" id="win" alt="" width="40%" height="40%" >
        <button class="scorebutton" value="Desk" name="Desk">LEADERBOARD</button>
      </div>

        
          <!-- <button class="scorebutton"  type="submit" value="Desk" name="Desk">
              SEE RESULTS!
          </button> -->

    </form>
  </div>

  <div class= "right">
     <p class="txt">Complete the puzzle before the time runs out!</p>
     <p class="txt2">MAJID</p>
  </div>
</div>


</div>

        <!-- <div id="my-canvas">
        </div> -->
        
        <!-- <script>
          var time = 2;
          var t = document.getElementById("t").value;
          console.log(t);
    var i = 0;
    var c = null;
    document.getElementById("time").innerHTML =Math.ceil(time/60) +":00";
    

    function count (){
      time--;
      if(time > 60){
        
        if(time%60 < 10){
        document.getElementById("time").innerHTML = "0"+ Math.ceil(time/60) -1  + ":0" + time%60;
        
      }
      else{
          document.getElementById("time").innerHTML = "0"+ Math.ceil(time/60) -1  + ":" + time%60;
        }
      }
      else{
      document.getElementById("time").innerHTML = "00:" + time;
      }
      if(time < 10){
        document.getElementById("time").innerHTML = "00:0" + time;
      }
      if(time === 0){
        clearInterval(c);
        
        var w = window.innerWidth;
        if(w<1000){
        const element = document.querySelector('.scorebuton');
        element.style.visibility = 'visible';
        }
        else{
          const element = document.querySelector('.scorebutton');
        element.style.visibility = 'visible';
        
        }
        document.getElementById("frm").setAttribute("method","get");
        document.getElementById("frm").setAttribute("action","/leader-l");
        let poptxt = document.getElementById("pt1");
        poptxt.innerHTML = "Better Luck Next Time!";
        const ele = document.getElementById("win");
        ele.remove();
        let popup = document.getElementById("popup");
        popup.classList.add("popup-open")
    // function openPopup(){
    //   	popup.classList.add("popup-open")
    // }

    // openPopup();
        // document.getElementById("frm").setAttribute("method","get");
        // document.getElementById("frm").setAttribute("action","/leader-l");
        
      }
    }

    function start(){
      if(i==0){
      // c = setInterval(count,1000);
      i++;
      }
    }
          // ...and a script with the following code:
          const rand = Math.floor(Math.random() * (2 - 1 + 1)) + 1;

          var art = "";
          if(rand == 1){
            art = "Artwork4.jpeg";
          }
          else{
            art = "Artwork4.jpeg"
          }
          let dali = new Image();
          dali.src = 'static/'+art;
          dali.onload = () => {
            const offstage = new headbreaker.Canvas('my-canvas', { width: 1500, height: 500,
    pieceSize: {x: 125, y: 125}, proximity: 30,
    lineSoftness: 0.18, image: dali,
    // ... more configs ...
    preventOffstageDrag: true,
    outline: new headbreaker.outline.Rounded(),
    fixed:true,
    
  });

  offstage.adjustImagesToPuzzleHeight();
  offstage.autogenerate({
    horizontalPiecesCount: 4,
    verticalPiecesCount: 4,
    insertsGenerator: headbreaker.generators.flipflop
  });

  // ['resize', 'DOMContentLoaded'].forEach((event) => {
  // window.addEventListener(event, () => {
  //   var container = document.getElementById('my-canvas');
  //   offstage.resize(container.offsetWidth, container.scrollHeight);
  //   offstage.scale(container.offsetWidth / initialWidth);
  //   offstage.redraw();
  // });
  var w = window.innerWidth;
var h = window.innerHeight;

if (h<800){
  offstage.resize(1500,550);
  const element = document.querySelector('.scorebutton');
        element.style.margin = '0';
        element.style.marginTop = '20px';
        const element2 = document.querySelector('.scorecontaintop');
        element2.style.height = '70px';

        
}
 console.log(w,h)
  if(w <= 1000){
    offstage.resize(500,1200);
  //   for(let i=0;i<20;i++){
  //   const rand2 = Math.floor(Math.random() * (600 - 300 + 1)) + 300
  //   00;
  // const rand3 = Math.floor(Math.random() * (700 - 600 + 1)) + 600;
  //   offstage.puzzle.pieces[i].translate(-100, rand2 - i*4);
  // }
  // offstage.puzzle.pieces[0].translate(-40, 610);
  // offstage.puzzle.pieces[1].translate(-30, 520);
  // offstage.puzzle.pieces[2].translate(-20, 530);
  // offstage.puzzle.pieces[3].translate(-20, 540);
  // offstage.puzzle.pieces[4].translate(-10, 650);
  // offstage.puzzle.pieces[5].translate(-40, 410);
  // offstage.puzzle.pieces[6].translate(-30, 420);
  // offstage.puzzle.pieces[7].translate(-20, 430);
  // offstage.puzzle.pieces[8].translate(-10, 450);
  // offstage.puzzle.pieces[9].translate(-20, 440);
  // offstage.puzzle.pieces[10].translate(-40, 460);
  // offstage.puzzle.pieces[11].translate(-30, 230);
  // offstage.puzzle.pieces[12].translate(-20, 220);
  // offstage.puzzle.pieces[13].translate(-20, 240);
  // offstage.puzzle.pieces[14].translate(-10, 250);
  // offstage.puzzle.pieces[15].translate(-40, 260);
  // offstage.puzzle.pieces[16].translate(-30, 150);
  // offstage.puzzle.pieces[17].translate(-20, 130);
  // offstage.puzzle.pieces[18].translate(-10, 120);
  // offstage.puzzle.pieces[19].translate(-5, 150);
  for(let i =0;i<4;i++){
    let rand1 = Math.floor(Math.random() * (600 - 500 + 1)) + 500;
    let rand2 = Math.floor(Math.random() * (80 - 1 + 1)) + 1
    offstage.puzzle.pieces[i].translate(-rand2, rand1);
  }

  for(let i =4;i<8;i++){
    let rand1 = Math.floor(Math.random() * (540 - 500 + 1)) + 500;
    let rand2 = Math.floor(Math.random() * (80 - 1 + 1)) + 1
    offstage.puzzle.pieces[i].translate(-rand2, rand1);
  }

  for(let i =8;i<12;i++){
    let rand1 = Math.floor(Math.random() * (570 - 530 + 1)) + 530;
    let rand2 = Math.floor(Math.random() * (80 - 1 + 1)) + 1
    offstage.puzzle.pieces[i].translate(-rand2, rand1);
  }


  for(let i =12;i<16;i++){
    let rand1 = Math.floor(Math.random() * (500 - 400 + 1)) + 400;
    let rand2 = Math.floor(Math.random() * (80 - 1 + 1)) + 1
    offstage.puzzle.pieces[i].translate(-rand2, rand1);
  }

  offstage.redraw();
  

 }
 else{
  // for(let i=0;i<16;i++){
  //   const rand2 = Math.floor(Math.random() * (-80 -100  + 1)) - 100;
  // const rand3 = Math.floor(Math.random() * (700 -500 + 1)) + 500;
  //   offstage.puzzle.pieces[i].translate(rand3, rand2);
  // }

    for(let i=0;i<4;i++){
    
  const c =  Math.floor(Math.random() * (2 - 1  + 1)) - 1;

  if(c==1){
    const rand2 = Math.floor(Math.random() * (300 + 10  + 1)) + 10;
  const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
    offstage.puzzle.pieces[i].translate(rand3, rand2);
  }else{
    const rand2 = Math.floor(Math.random() * (200 - 10  + 1)) - 10;
  const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
    offstage.puzzle.pieces[i].translate(rand3, rand2);
    
  }
    
  }

  for(let i=4;i<8;i++){
    
    const c =  Math.floor(Math.random() * (2 - 1  + 1)) - 1;
  
    if(c==1){
      const rand2 = Math.floor(Math.random() * (300 + 10  + 1)) + 10;
    const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, rand2);
    }else{
      const rand2 = Math.floor(Math.random() * (200 - 10  + 1)) - 10;
    const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, rand2);
    }
      
    }

    for(let i=8;i<12;i++){
    
    const c =  Math.floor(Math.random() * (2 - 1  + 1)) - 1;
  
    if(c==1){
      const rand2 = Math.floor(Math.random() * (50 + 10  + 1)) + 10;
    const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, -rand2);
    }else{
      const rand2 = Math.floor(Math.random() * (100 + 10  + 1)) + 10;
    const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, -rand2);
    }
      
    }

    for(let i=12;i<16;i++){
    
    const c =  Math.floor(Math.random() * (2 - 1  + 1)) - 1;
  
    if(c==1){
      const rand2 = Math.floor(Math.random() * (100 + 50  + 1)) + 50;
    const rand3 = Math.floor(Math.random() * (900 -500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, -rand2);
    }else{
      const rand2 = Math.floor(Math.random() * (100 + 50  + 1)) + 50;
    const rand3 = Math.floor(Math.random() * (900 - 500 + 1)) + 500;
      offstage.puzzle.pieces[i].translate(rand3, -rand2);
    }
      
    }
 }

 

  offstage.draw();

 


  offstage.attachSolvedValidator();
  offstage.onValid(() => {
    console.log("SOLVED!");
    clearInterval(c);
    let popup = document.getElementById("popup");
    const ele = document.querySelector('.popup');
    ele.style.height = "500px";
    ele.style.width = "700px";
    function openPopup(){
      	popup.classList.add("popup-open")
    }

    openPopup();

    var w = window.innerWidth;
        if(w<1000){
        const element = document.querySelector('.scorebuton');
        element.style.visibility = 'visible';
        }
        else{
          const element = document.querySelector('.scorebutton');
        element.style.visibility = 'visible';
        }


    var input = document.getElementById("s"); //Select your button element
    input.setAttribute("value",time); //Set value attribute to your element

    setTimeout(() =>{
      const element = document.querySelector('.im');
        element.style.visibility = 'visible';
        
    })
    
  })

          }

    


    

  //   const counter = () =>{
  //   const count = () => {
  //     time--;
  //   }

  //   setInterval(count, 1000);
  //   console.log(time);
  // }

  // counter();
        </script> -->

        	<!-- scripts -->
	<script src="https://cdn.jsdelivr.net/npm/p5@1.4.0/lib/p5.js"></script>
	<script src=plugins/clipboard.js></script>
	<script src=plugins/transform.js></script>
	<script src=plugins/cors.js></script>
	<script src=js/jigsaw.js></script>
	<script src=js/script.js></script>



<!-- <style> .form-group { margin-top: 15px; } #responsive-canvas .konvajs-content canvas, #offstage-canvas .konvajs-content canvas { border: solid !important; } #validated-canvas-overlay { position:absolute; left:0; top: 0; margin: 0; padding: 0; opacity: 0; pointer-events: none; transition: opacity 1s ease-in-out; } #validated-canvas-overlay.active { opacity: 1; } </style> -->

</body>
</html>